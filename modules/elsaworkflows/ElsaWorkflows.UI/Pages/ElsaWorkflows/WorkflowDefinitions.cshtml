@page "/elsa/workflows/definitions"
@using ElsaWorkflows.UI.Extensions
@model ElsaWorkflows.UI.Pages.ElsaWorkflows.WorkflowDefinitionsModel

<abp-style-bundle name="ElsaWorkflowsBundle">
    <abp-style src="/_content/MudBlazor/MudBlazor.min.css"/>
    <abp-style src="/_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.css"/>
    <abp-style src="/_content/Radzen.Blazor/css/material-base.css"/>
    <abp-style src="/_content/Elsa.Studio.Shell/css/shell.css"/>
    <abp-style src="/Elsa.Studio.Host.CustomElements.styles.css"/>
</abp-style-bundle>

<abp-script-bundle>
    <abp-script src="/_content/MudBlazor/MudBlazor.min.js"/>
    <abp-script src="/_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.js"/>
    <abp-script src="/_content/Radzen.Blazor/Radzen.Blazor.js"/>
</abp-script-bundle>

<script src="/_framework/blazor.webassembly.js" autostart="false"></script>

<elsa-workflow-definition-list
    id="workflow-definition-list"
    remote-endpoint="@Url.ToAbsoluteUrl("~/elsa/api")"
    ></elsa-workflow-definition-list>
<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>

    <a class="dismiss">ðŸ—™</a>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        Blazor.start({
            loadBootResource: function (type, name, defaultUri, integrity) {
                console.log('loadBootResource', type, name, defaultUri, integrity);
                switch (name) {
                    case 'dotnet.js':

                        return `/${defaultUri}`;
                }

                return defaultUri;
            }
        }).then(() => {
            const component = document.querySelector("elsa-workflow-definition-list");

            if (component) {
                component.clicked = () => {
                    alert('Clicked 1');
                };
                
                component.addEventListener('clicked', (event) => {
                    alert('Clicked 2');
                });
                
                component.editWorkflowDefinition = () => {
                    alert('Clicked 3');
                };
            }
        });
    });
</script>